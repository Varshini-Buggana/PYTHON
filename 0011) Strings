# strings
string is a data type that stores a sequence of characters.
String is like a sentence

Let's try this

str1 = "This is a String"          # double quotes
str2 = 'VarshiniBuggana'           # single quote
str3 = """ This is a String """    # triple quote


Why these many kind of quotes?
If any statement consits of single or double quotes, to avoid that confusion different quotes are used.
ex:- 
Program:- 
  str = "Hello, I'm Varshini"
  print(str)
Output:-
  Hello, I'm Varshini


How to print a statement in new line ?
\n is used to print a statement in new line.
Program:-
  str1 = "This is a string. \nThis is in new line"
  print(str1)
Output:-
  This is a string.
  This is in new line

# Basic Operations
  - Concatenation
    print("Hello" + " World")
    Hello World

  - Length of String
    str = "Hello World"
    print(len(str))
    11                      # space also included 

#Indexing

Indexing starts from 0
1st character - 0
2nd character - 1
nth character - n-1
space also included in it

H e l l o   W o r l d
| | | | | | | | | | |
0 1 2 3 4 5 6 7 8 9 10

str = "Hello World"
print(str[1])
Output:-
e

# String is immutable - can't assign the values
str="Hello World"
str[4]="@"
print(str)
Output:- 
str[4]="@"
TypeError:- 'str' object does not support item assignment

# Slicing
Accessing parts of a string
Syntax:-
  str[starting_index : ending_index)
ending_index print ending_index-1 value
str="Hello World"
print(str[1:4]        # Output:- ell       (start from index '1' i.e.2nd character and stops at index '4' i.e.string printed upto index '3' i.e. 4th character)
print(str[:5])        # Output:- Hello     (If starting_index in not defined there by default it prints from starting character)
print(str[2:])        # Output:- llo World (If ending_index is not defined it prints upto end)
print(str[::3])    # Output:- HlWl       (here 3rd value is known as step, it escapes 3 characters and print between the range of starting_index and ending_index)

# Negative slicing
Backward slicing
Negative Index

 H  e  l  l  o
 |  |  |  |  |
-5 -4 -3 -2 -1
str = "Hello"
print(str[-4:-1])      # Output:- ell

# string Functions
str = "i am a coder."
print(str.endswith("er."))  # return true if string ends with substring  # Output:- True 
print(str.capitalize())     #capitalizes 1st char                        # Output:- I am a coder.
print(str.replace("o","a")) # replace all occurences of old              # Output:- i am a cader.
print(str.find("hello"))    # returns 1st index of 1st occurrer          # Output:- -1    # not found
print(str.count("a"))      # counts the occurence of substring          # Output:- 2
