# Tuples in Python

- A built-in data type that lets us create immutable sequence of value
- Denoted in paranthesis ()
- Tuple is an immutable data type

example:-
1) tuple = (87, 95, 75, 84, 67)
   print(type(tuple))
   O/P:-
   <class 'tuple'>

2)  tuple=(78, 7,74, 34, 52)
    tuple[0] = 2
    print(tuple)
    OUTPUT:- 
    ERROR!
    Traceback (most recent call last):
      File "<main.py>", line 2, in <module>
    TypeError: 'tuple' object does not support item assignment

If there is a single value in tuple , it must have a comma Otherwise it should be other datatype
let's look at this

 1) tuple=(1,)
    print(tuple)
    print(type(tuple))
    O/P:-
    (1,)
    <class 'tuple'>

2)  tuple=(1)
    print(tuple)
    print(type(tuple))
    O/P:-
    1
    <class 'int'>

3)  tuple=("hello",)
    print(tuple)
    print(type(tuple))
    O/P:-
    ('hello',)
    <class 'tuple'>

4)  tuple=("hello")
    print(tuple)
    print(type(tuple))
    O/P:-
    hello
    <class 'str'>

# Tuple Slicing 
Same as string and list slicing

# Tuple Methods

    Program:-
    tuple = (1, 2, 1, 3, 1)
    print(tuple.index(2))   # returns index of first occurence
    print(tuple.count(1))   # counts total occurences 
    Output:-
    1
    3
