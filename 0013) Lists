# Lists in Python
- A built-in data type that stores set of values.
- It can store elements of different data types(integer, float, string,, etc.)
- Denoted by square brckets [].
- Lists are mutable (change) whereas Strings are immutable (unchanged).

ex:-
student = ["Varshini", 20, "Hyderabad"]

# mutable & immutable
Program:-
    student = ["Varshini", 20, "Hyderabad"]
    student[1] = 19      # It can change value at index 1
    print(student)  
    str = "hello"
    str[1]="y"          # It cannot change the value at index 1
    print(str)
Output:-
    ['Varshini', 19, 'Hyderabad']
    ERROR!
    Traceback (most recent call last):
      File "<main.py>", line 7, in <module>
    TypeError: 'str' object does not support item assignment

1) marks = [98, 95, 83, 58, 75]
   print(marks)
   print(type(marks))
   print(marks[2])
   print(len(marks))
   O/P:-
   [98, 95, 83, 58, 75]
   <class 'list'>
   83
   5

# List Slicing

Similar to String Slicing
list_name[starting_index:ending_index]

marks = [84, 67, 43, 98, 78]
print(marks[1:4])
O/P:-
[67, 43, 98]

# List Methods

PROGRAM:-
      list = [2,1,3]
      print(list.append(4))
      list.append(4)          # adds one element at the end  
      print(list)
      list = [2,1,3]
      list.sort()              # sorts in ascending order  
      print(list)
      list = [2,1,3]
      list.sort(reverse=True)  # sorts in descending order 
      print(list)
      list = [2,1,3]
      list.reverse()          # reverse list       
      print(list)
      list = [2,1,3]
      list.insert(1,5)        # insert element at index(index, element)
      print(list)
      list = [2,1,3]
      list.remove(3)          # removes first occurence of element
      print(list)
      list = [2,1,3]
      list.pop(1)             # remove element at index
      print(list)

OUTPUT:-
      None
      [2, 1, 3, 4, 4]
      [1, 2, 3]
      [3, 2, 1]
      [3, 1, 2]
      [2, 5, 1, 3]
      [2, 1]
      [2, 3]

